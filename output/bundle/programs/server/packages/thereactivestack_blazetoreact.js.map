{"version":3,"sources":["meteor://ðŸ’»app/packages/thereactivestack:blazetoreact/lib/BlazeToReact.jsx","meteor://ðŸ’»app/packages/thereactivestack:blazetoreact/lib/BlazeToReact-client.jsx","meteor://ðŸ’»app/packages/thereactivestack:blazetoreact/lib/BlazeToReact-server.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAT,QAAiC,oCAAjC;;AAEA,iBAAiB;AACf,SAAO;AADQ,CAAjB,EAEG,+BAFH;;AAIA,IAAI,OAAO,QAAX,EAAqB;AACnB,iBAAe,QAAQ,2BAAR,YAAf;AACD,CAFD,MAEO;AACL,iBAAe,QAAQ,2BAAR,YAAf;AACD;;AAED,eAAe,YAAf,oE;;;;;;;;;;;ACZA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,eAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAClD,MAAI,CAAC,OAAL,EAAc;AACZ,cAAU,EAAV;AACD;;AAED,MAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,YAAQ,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAO,MAAM,WAAN,CAAkB;AACvB,yBADuB,mCACC;;AAEtB,aAAO,KAAP;AACD,KAJsB;AAMvB,wBANuB,kCAMA;AACrB,YAAM,MAAN,CAAa,KAAK,SAAlB;AACD,KARsB;AAUvB,6BAVuB,qCAUG,KAVH,EAUU;AAC/B,WAAK,SAAL,CAAe,OAAf,CAAuB,GAAvB,CAA2B,KAA3B;AACD,KAZsB;AAcvB,UAduB,oBAcd;AACP,aAAO,MAAM,YAAN,CAAmB,QAAQ,SAA3B,EAAsC;AAC3C,aAAK,UAAS,EAAT,EAAa;AAChB,cAAI,MAAM,CAAC,KAAK,SAAhB,EAA2B;AACzB,iBAAK,SAAL,GAAiB,MAAM,cAAN,CAAqB,OAAO,QAAP,CAAgB,IAAhB,CAArB,EAA4C,KAAK,KAAjD,EAAwD,EAAxD,CAAjB;AACD;AACF,SAJI,CAIH,IAJG,CAIE,IAJF;AADsC,OAAtC,CAAP;AAOD;AAtBsB,GAAlB,CAAP;AAwBD,+F;;;;;;;;;;;ACpCD,OAAO,KAAP,MAAkB,OAAlB;;;;;AAKA,IAAM,eAAe,MAAM,WAAN,CAAkB;AAAA;AACrC,QADqC,oBAC5B;AACP,WAAO,iCAAP;AACD;AAHoC,CAAlB,CAArB;;AAMA,eAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAClD,MAAI,CAAC,OAAL,EAAc;AACZ,cAAU,EAAV;AACD;;AAED,MAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,YAAQ,SAAR,GAAoB,iCAApB;AACD;;AAED,SAAO,MAAM,WAAN,CAAkB;AACvB,UADuB,oBACd;AACP,aAAO,QAAQ,SAAf;AACD;AAHsB,GAAlB,CAAP;AAKD,+F","file":"/packages/thereactivestack_blazetoreact.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.x'\n}, 'thereactivestack:blazetoreact');\n\nif (Meteor.isServer) {\n  BlazeToReact = require('./BlazeToReact-server.jsx').default;\n} else {\n  BlazeToReact = require('./BlazeToReact-client.jsx').default;\n}\n\nexport default BlazeToReact;\n","import React from 'react';\nimport { Blaze } from 'meteor/blaze';\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    shouldComponentUpdate() {\n      // Blaze has the full control once started\n      return false;\n    },\n\n    componentWillUnmount() {\n      Blaze.remove(this.blazeView);\n    },\n\n    componentWillReceiveProps(props) {\n      this.blazeView.dataVar.set(props);\n    },\n\n    render() {\n      return React.cloneElement(options.container, {\n        ref: function(el) {\n          if (el && !this.blazeView) {\n            this.blazeView = Blaze.renderWithData(global.Template[name], this.props, el);\n          }\n        }.bind(this)\n      });\n    }\n  });\n};\n","import React from 'react';\n\n// Blaze templates are not loaded server-side, we cannot do server-rendering\n// We make sure the render is the same as on the client initially\n\nconst DummyElement = React.createClass({\n  render() {\n    return <span />;\n  }\n});\n\nexport default function BlazeToReact(name, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.container) {\n    options.container = <span />;\n  }\n\n  return React.createClass({\n    render() {\n      return options.container;\n    }\n  });\n};\n"]}